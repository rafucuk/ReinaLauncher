name: Build

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}

    permissions:
      contents: write

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Dependencies
        run: npm i
        shell: bash

      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run dist
        shell: bash

      - name: Get package version
        id: get_version
        shell: pwsh
        run: |
          $version = "v$((Get-Content .\package.json | ConvertFrom-Json).version)"
          echo "VERSION=$version" >> $env:GITHUB_ENV
          $noversion = $version.TrimStart('v')
          echo "NOVERSION=$noversion" >> $env:GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/latest.yml
          asset_name: latest.yml
          asset_content_type: application/octet-stream

      - name: Upload Windows Installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/Reina Launcher-setup-${{ env.NOVERSION }}.exe
          asset_name: Reina-Launcher-setup-${{ env.NOVERSION }}.exe
          asset_content_type: application/octet-stream

      - name: Upload Blockmap
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/Reina Launcher-setup-${{ env.NOVERSION }}.exe.blockmap
          asset_name: Reina-Launcher-setup-${{ env.NOVERSION }}.exe.blockmap
          asset_content_type: application/octet-stream
